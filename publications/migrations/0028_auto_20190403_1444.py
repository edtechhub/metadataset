# Generated by Django 2.0 on 2019-04-03 14:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('publications', '0027_auto_20190403_1137'),
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparison', models.CharField(blank=True, max_length=255, null=True)),
                ('treatment_mean', models.FloatField(blank=True, null=True)),
                ('treatment_sd', models.FloatField(blank=True, help_text='Standard deviation', null=True)),
                ('treatment_n', models.IntegerField(blank=True, help_text='Number of replicates', null=True)),
                ('control_mean', models.FloatField(blank=True, null=True)),
                ('control_sd', models.FloatField(blank=True, help_text='Standard deviation', null=True)),
                ('control_n', models.IntegerField(blank=True, help_text='Number of replicates', null=True)),
                ('unit', models.CharField(blank=True, help_text='Unit for treatment mean and control mean', max_length=60, null=True)),
                ('sed', models.FloatField(blank=True, help_text='Standard error of the difference between the means', null=True)),
                ('lsd', models.FloatField(blank=True, help_text='Least significant difference between the means', null=True)),
                ('approximate_p_value', models.CharField(blank=True, choices=[('< 0.0001', '< 0.0001'), ('< 0.001', '< 0.001'), ('< 0.01', '< 0.01'), ('< 0.05', '< 0.05'), ('< 0.1', '< 0.1'), ('> 0.05', '> 0.05'), ('> 0.1', '> 0.1')], max_length=30, null=True)),
                ('p_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('z_value', models.FloatField(blank=True, null=True)),
                ('effect_size', models.FloatField(blank=True, help_text='As published, not as calculated from the data above', null=True)),
                ('effect_size_unit', models.CharField(blank=True, choices=[('d', 'Standardized mean difference (d)'), ('R', 'Response ratio (R)'), ('L', 'Log response ratio (L)'), ('r', 'Correlation coefficient (r)'), ('Zr', "Fischer's Z-transformed r (Zr)"), ('Other', 'Other')], max_length=30, null=True)),
                ('other_effect_size_unit', models.CharField(blank=True, max_length=60, null=True)),
                ('lower_limit', models.FloatField(blank=True, help_text='Lower limit of the confidence interval for the effect size', null=True)),
                ('upper_limit', models.FloatField(blank=True, help_text='Upper limit of the confidence interval for the effect size', null=True)),
                ('confidence', models.FloatField(blank=True, help_text='Confidence of the confidence interval (percent)', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('se', models.FloatField(blank=True, help_text='Standard error of the effect size', null=True)),
                ('variance', models.FloatField(blank=True, help_text='Variance of the effect size', null=True)),
                ('n', models.IntegerField(blank=True, help_text='Number of replicates', null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications.Experiment')),
                ('experiment_population', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications.ExperimentPopulation')),
            ],
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='approximate_p_value',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='comparison',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='confidence',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='control_mean',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='control_n',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='control_sd',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='effect_size',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='effect_size_unit',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='lower_limit',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='lsd',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='n',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='note',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='other_effect_size_unit',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='p_value',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='se',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='sed',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='treatment_mean',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='treatment_n',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='treatment_sd',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='unit',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='upper_limit',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='variance',
        ),
        migrations.RemoveField(
            model_name='experimentpopulationoutcome',
            name='z_value',
        ),
        migrations.AddField(
            model_name='data',
            name='experiment_population_outcome',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications.ExperimentPopulationOutcome'),
        ),
        migrations.AddField(
            model_name='data',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications.Publication'),
        ),
        migrations.AddField(
            model_name='data',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='publications.Subject'),
        ),
    ]
